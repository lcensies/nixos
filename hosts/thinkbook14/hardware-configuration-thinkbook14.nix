# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;


  boot.initrd.luks.devices."luks-6b53b43d-f028-420f-8aea-7e7bfbc151f0".device = "/dev/disk/by-uuid/6b53b43d-f028-420f-8aea-7e7bfbc151f0";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/1a66efc5-7dde-4e50-808a-8f67aea3ede4";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-0b538d54-dc82-4839-9ade-62b68e825511".device = "/dev/disk/by-uuid/0b538d54-dc82-4839-9ade-62b68e825511";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/83D7-F2CE";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/c8503b0d-0bf3-491b-96b1-7f4cebe0c03d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
